package day0319;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

public class AboutSawon {
	DbConnect db=new DbConnect();
	Scanner sc =new Scanner(System.in);
	
	public void insertSawon() {
		System.out.println("**사원추가하기**");
		System.out.println("사원명?");
		String name=sc.nextLine();
		System.out.println("성별(남자/여자)?");
		String gender=sc.nextLine();
		System.out.println("부서?");
		String buseo=sc.nextLine();
		System.out.println("월급여?");
		int pay=Integer.parseInt(sc.nextLine());
		
		String sql="insert into sawon values (seq_sawon.nextval, '"+name+"','"+gender+"','"+buseo+"',"+pay+")";
		System.out.println(sql);
		
		Connection conn=db.getConnection();
		Statement stmt=null;
		
		try {
			stmt=conn.createStatement();
			stmt.execute(sql);  //sql 실행
			
			System.out.println("DB에 사원이 추가됨.");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			db.dbClose(stmt, conn);
		}
	}
	public void selectSawon() {
		String sql="select num,name,gender,buseo,to_char(pay,'L999,999,999') pay from sawon";
		System.out.println(sql);
		Connection conn=db.getConnection();
		Statement stmt=null;
		ResultSet rs=null;
	
			try {
				stmt=conn.createStatement();
				rs=stmt.executeQuery(sql);
				while(rs.next()) {
					System.out.printf("%d \t %s \t %s \t %s \t %s\n",rs.getInt("num"),rs.getString("name"),rs.getString("gender"),rs.getString("buseo"),rs.getString("pay"));
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}finally {
				db.dbClose(rs, stmt, conn);
			}
	}
	public void deleteSawon() {
		System.out.println("삭제할 시퀀스를 입력해 주세요");
		int num=Integer.parseInt(sc.nextLine());
		String sql="delete from sawon where num="+num;
		Connection conn=db.getConnection();
		Statement stmt=null;
		try {
			stmt=conn.createStatement();
			int a=stmt.executeUpdate(sql);  //삭제됨
			if(a==0) {
				System.out.println("없는 번호 입니다");
			}
			else
				System.out.println("삭제되었습니다");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			db.dbClose(stmt, conn);
		}
	}
	//수정...시퀀스 입력후 이름,부서,급여 변경하도록
	public void updateSawon() {
		System.out.println("수정할 사원번호?");
		int num=Integer.parseInt(sc.nextLine());
		System.out.println("수정할 사원명은?");
		String name=sc.nextLine();
		System.out.println("수정할 부서는?");
		String buseo=sc.nextLine();
		System.out.println("수정할 급여는?");
		int pay=Integer.parseInt(sc.nextLine());
		
		String sql="update sawon set name='"+name+"',buseo='"+buseo+"',pay='"+pay+"' where num="+num;
		
		Connection conn=db.getConnection();
		Statement stmt=null;
		try {
			stmt=conn.createStatement();
			int a=stmt.executeUpdate(sql);
			
			if(a==0) {
				System.out.println("수정할 데이터가 존재하지 않음");
			}
			else 
				System.out.println("수정되었습니다");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			db.dbClose(stmt, conn);
		}
	}
	public void searchSawon() {
		Scanner sc=new Scanner(System.in);
		System.out.println("검색할 사원의 성?");
		String name=sc.nextLine();
		String sql="select num,name,gender,buseo,to_char(pay,'L999,999,999') pay from sawon where name like '"+name+"%'";
		Connection conn=db.getConnection();
		Statement stmt=null;
		ResultSet rs=null;
		try {
			stmt=conn.createStatement();
			rs=stmt.executeQuery(sql);
			while(rs.next()) {
				System.out.printf("%d \t %s \t %s \t %s \t  %s\n",rs.getInt("num"),rs.getString("name"),rs.getString("gender"),rs.getString("buseo"),rs.getString("pay"));
			}
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally {
			db.dbClose(rs, stmt, conn);
		}
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		AboutSawon as=new AboutSawon();
	
		Scanner sc=new Scanner(System.in);
		int n;
		while(true)
		{
			System.out.println("***Oracle Sawon 연습***");
			System.out.println("**1.데이타입력  2.데이타출력  3.데이타수정  4.데이타 삭제 5.데이타 검색(성) 9.종료");
			
			n=Integer.parseInt(sc.nextLine());
			if(n==1)
				as.insertSawon();
			if(n==2) {
				as.selectSawon();
			}
			if(n==3) {
				as.updateSawon();
			}
			if(n==4)
				as.deleteSawon();
			if(n==5)
				as.searchSawon();
			else if(n==9) {
				System.out.println("종료");
				break;
			}
		}
	}

}
