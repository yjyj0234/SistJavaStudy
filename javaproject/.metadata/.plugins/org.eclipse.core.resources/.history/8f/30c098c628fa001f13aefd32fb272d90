package day0305;

import java.util.Scanner;

class Company{
	
	private String staff,position;  //직원명, 직급
	private int famSu;  //가족수 

	//디폴트 생성자
	public Company() {
		System.out.println("디폴트 생성자");
	}
	//사원명, 직급,가족수를 인자로 받는 생성자
	public Company(String staff,String position,int famSu) {
		this.staff=staff;
		this.position=position;
		this.famSu=famSu;
	}
	//각각의 setter & getter
	public String getStaff() {
		return staff;
	}
	public void setStaff(String staff) {
		this.staff = staff;
	}
	public String getPosition() {
		return position;
	}
	public void setPosition(String position) {
		this.position = position;
	}
	public int getFamSu() {
		return famSu;
	}
	public void setFamSu(int famSu) {
		this.famSu = famSu;
	}
	//직급에 따라 기본급: 부장->450 과장->350 대리->280 사원->220 getGibonPay()
	public double getGibonPay() {
		int gP = 0;
		if(position.equals("부장"))
				gP=4500000;
		else if(position.equals("과장"))
				gP=3500000;
		else if(position.equals("대리"))
				gP=2800000;
		else if(position.equals("사원"))
				gP=2200000;
		return gP;
	}
	/* switch문으로 했을 경우
	 * public int getGibonPay(){
	 * int gibon=switch(position)
	 * {
	 * 		case "부장"->4500000;
	 * 		case "과장"->3500000;
	 * 		case "대리"->2800000;
	 * 		case "사원"->2200000;
	 * 		default->0;
	 * };
	 * return gibon;
	 * }
	 */
	
	//직급에 따라 수당:부장, 과장 ==>1000000 대리, 사원==>700000 getSudangPay()
	public int getSudangPay() {
		int gS=0;
		if(position.equals("부장")||position.equals("과장"))
			gS=1000000;
		else if(position.equals("대리")||position.equals("사원"))
			gS=700000;
		return gS;
	}
	/*switch문
	 * public int getSudangPay()
	 * {
	 * 		int sudang=switch(position){
	 * 			case "부장","과장"->1000000;
	 * 			case "대리","사원"->700000;
	 * 		default->0;
	 * 		};
	 * 		return sudang;
	 * }
	 */
	//가족수가 5인이상:30만 5인미만 2인이상 10만원 나머지는 0 getFamSudang()
	public int getFamSudang() {
		int gFS=0;
		if(famSu>=5)
			gFS+=300000;
		else if(famSu<5&&famSu>=2)
			gFS+=100000;
		 return gFS;	
	}
	//세금: 기본급의 5%를 반환받아서 세금 getTax()
	public double getTax() {
		return getGibonPay()*0.05;
	}
	/*
	 * tax를 int로 할 경우
	 * public int getTax()
	 * {
	 * 		int tax=getGibonPay()*5/100;
	 * 		return tax;
	 * }
	 */
	//실수령액: 기본급+직급수당+가족수당 - 세금 getNetPay()
	public double getNetPay() {
		return getGibonPay()+getSudangPay()+getFamSudang()-getTax();
	}
}
////////////////////////////////////////////////////////////////////
public class QuizClass {
	//제목 출력 메서드(showTitle())
	public static void showTitle() 
	{
		System.out.println("사원명\t직급\t기본급\t직급수당\t가족수당\t세금\t실수령액");
		System.out.println("=".repeat(50));            //= 이 50번 반복
	}
	//사원명		직급		기본급		직급수당		가족수당		세금		실수령액
	
	//한개의 사원 데이타 출력(writeSawon()) 
	public static void writeSawon(Company [] myCompany) {
		for(Company cp:myCompany)
		System.out.printf(cp.getStaff()+"\t"+cp.getPosition()+"\t"+"%.0f"+"\t"+cp.getSudangPay()
							+"\t"+cp.getFamSudang()+"\t"+"%.0f"+"\t"+"%.0f",cp.getGibonPay(),cp.getTax(),cp.getNetPay());
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//인원수를 입력후 인원수만큼 배열 메모리에 할당
		Scanner sc=new Scanner(System.in);
		int inwon;
		Company [] mC;  //선언
		
		System.out.println("인원 수 입력");
		inwon=Integer.parseInt(sc.nextLine());
		//배열에 데이타를 입력후 생성자를 통해서 데이타 저장하기
		mC=new Company[inwon];   //입력하면 그 inwon 수 만큼 배열이 할당
			
		
		//반복문 통해서 데이타 출력하는 메서드 호출
		for(int i=0;i<inwon;i++)
		{
			System.out.println("이름 입력: ");
			String name=sc.nextLine();
			System.out.println("직급 입력: ");
			String jik=sc.nextLine();
			System.out.println("가족 수 입력: ");
			int gajok=Integer.parseInt(sc.nextLine());
			
			/*사원생성_방법1
			mC[i]=new Company();	//디폴트(초기값이 아무것도 들어가지 않은상태)
			mC[i].setStaff(name);
			mC[i].setPosition(jik);
			mC[i].setFamSu(gajok);
			*/
			//사원생성_방법2
			mC[i]=new Company(name, jik, gajok);
		}
		//제목출력
		showTitle();

		writeSawon(mC);
	}

}
